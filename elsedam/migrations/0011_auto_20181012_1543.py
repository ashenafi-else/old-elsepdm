# Generated by Django 2.0 on 2018-10-12 15:43

from django.db import migrations, models
import django.db.models.deletion
import elsedam.services
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('elsedam', '0010_auto_20181011_1119'),
    ]

    operations = [
        migrations.CreateModel(
            name='AzureStorage',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('domain', models.CharField(max_length=255)),
                ('storage_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('buffered', 'Buffered')], editable=False, max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('account_name', models.CharField(editable=False, max_length=255)),
                ('account_key', models.CharField(editable=False, max_length=255)),
                ('container', models.CharField(editable=False, max_length=255)),
                ('storage_timeout', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, elsedam.services.AzureService, elsedam.services.StorageService),
        ),
        migrations.CreateModel(
            name='StorageLocation',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('path', models.CharField(editable=False, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='brand',
            name='buffered_storage',
        ),
        migrations.RemoveField(
            model_name='brand',
            name='id',
        ),
        migrations.RemoveField(
            model_name='brand',
            name='modified',
        ),
        migrations.RemoveField(
            model_name='brand',
            name='private_storage',
        ),
        migrations.RemoveField(
            model_name='brand',
            name='public_storage',
        ),
        migrations.RemoveField(
            model_name='buffereddamasset',
            name='id',
        ),
        migrations.RemoveField(
            model_name='damassetrequest',
            name='id',
        ),
        migrations.RemoveField(
            model_name='storagegroup',
            name='id',
        ),
        migrations.RemoveField(
            model_name='storagegroup',
            name='storage',
        ),
        migrations.AddField(
            model_name='brand',
            name='updated',
            field=models.DateTimeField(auto_now=True, verbose_name='Update'),
        ),
        migrations.AddField(
            model_name='brand',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AddField(
            model_name='buffereddamasset',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date'),
        ),
        migrations.AddField(
            model_name='buffereddamasset',
            name='deleted',
            field=models.DateTimeField(editable=False, null=True),
        ),
        migrations.AddField(
            model_name='buffereddamasset',
            name='updated',
            field=models.DateTimeField(auto_now=True, verbose_name='Update'),
        ),
        migrations.AddField(
            model_name='buffereddamasset',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AddField(
            model_name='damasset',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date'),
        ),
        migrations.AddField(
            model_name='damasset',
            name='location_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='damasset',
            name='location_uuid',
            field=models.UUIDField(null=True),
        ),
        migrations.AddField(
            model_name='damasset',
            name='updated',
            field=models.DateTimeField(auto_now=True, verbose_name='Update'),
        ),
        migrations.AddField(
            model_name='damasset',
            name='url',
            field=models.URLField(null=True),
        ),
        migrations.AddField(
            model_name='damassetrequest',
            name='deleted',
            field=models.DateTimeField(editable=False, null=True),
        ),
        migrations.AddField(
            model_name='damassetrequest',
            name='updated',
            field=models.DateTimeField(auto_now=True, verbose_name='Update'),
        ),
        migrations.AddField(
            model_name='damassetrequest',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AddField(
            model_name='storagegroup',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date'),
        ),
        migrations.AddField(
            model_name='storagegroup',
            name='location_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='storagegroup',
            name='location_uuid',
            field=models.UUIDField(null=True),
        ),
        migrations.AddField(
            model_name='storagegroup',
            name='updated',
            field=models.DateTimeField(auto_now=True, verbose_name='Update'),
        ),
        migrations.AddField(
            model_name='storagegroup',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='brand',
            name='brand_external_id',
            field=models.CharField(help_text='Middleware id', max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name='brand',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='buffereddamasset',
            name='last_request',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.CreateModel(
            name='AzureStorageLocation',
            fields=[
                ('storagelocation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='elsedam.StorageLocation')),
                ('container', models.CharField(editable=False, max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('elsedam.storagelocation',),
        ),
        migrations.DeleteModel(
            name='Storage',
        ),
        migrations.AddField(
            model_name='azurestorage',
            name='brand',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elsedam.Brand'),
        ),
        migrations.AddField(
            model_name='azurestoragelocation',
            name='storage',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elsedam.AzureStorage'),
        ),
    ]
